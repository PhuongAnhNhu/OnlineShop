{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstants\";\nexport const cartReducer = (state = {\n  cartItem: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      debugger;\n      const exitsItem = {};\n\n      if (!state.cartItem) {\n        return;\n      } else {\n        return exitsItem = state.cartItem.find(x => x.product === item.product);\n      }\n\n      if (exitsItem) {\n        return { ...state,\n          cartItem: state.cartItem.map(x => x.product === exitsItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItem: [...state.cartItem, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/phuong.nhu/Documents/Development/Learn/onlineshopudemy/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItem","action","type","item","payload","exitsItem","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAT,EAA2BC,MAA3B,KAAsC;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,aAAL;AACE,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA;AACA,YAAMC,SAAS,GAAG,EAAlB;;AACA,UAAI,CAACN,KAAK,CAACC,QAAX,EAAqB;AACnB;AACD,OAFD,MAEO;AACL,eAAQK,SAAS,GAAGN,KAAK,CAACC,QAAN,CAAeM,IAAf,CACjBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OADR,CAApB;AAGD;;AAED,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeS,GAAf,CAAoBF,CAAD,IAC3BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADjC;AAFL,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBG,IAApB;AAFL,SAAP;AAID;;AACH;AACE,aAAOJ,KAAP;AA3BJ;AA6BD,CA9BM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItem: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      debugger;\n      const exitsItem = {}\n      if (!state.cartItem) {\n        return;\n      } else {\n        return  exitsItem = state.cartItem.find(\n          (x) => x.product === item.product\n        );\n      }\n\n      if (exitsItem) {\n        return {\n          ...state,\n          cartItem: state.cartItem.map((x) =>\n            x.product === exitsItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItem: [...state.cartItem, item],\n        };\n      }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}